*** /home/rohaan/linux-5.15.10/arch/x86/entry/syscalls/syscall_64.tbl	2022-02-10 12:58:18.263269426 +0530
--- linux-5.15.10/arch/x86/entry/syscalls/syscall_64.tbl	2021-12-17 15:00:17.000000000 +0530
***************
*** 370,376 ****
  446	common	landlock_restrict_self	sys_landlock_restrict_self
  447	common	memfd_secret		sys_memfd_secret
  448	common	process_mrelease	sys_process_mrelease
! 449	common	hello		sys_hello
  #
  # Due to a historical design error, certain syscalls are numbered differently
  # in x32 as compared to native x86_64.  These syscalls have numbers 512-547.
--- 370,376 ----
  446	common	landlock_restrict_self	sys_landlock_restrict_self
  447	common	memfd_secret		sys_memfd_secret
  448	common	process_mrelease	sys_process_mrelease
! 
  #
  # Due to a historical design error, certain syscalls are numbered differently
  # in x32 as compared to native x86_64.  These syscalls have numbers 512-547.
*** /home/rohaan/linux-5.15.10/include/linux/syscalls.h	2022-02-10 12:57:01.847370700 +0530
--- linux-5.15.10/include/linux/syscalls.h	2021-12-17 15:00:17.000000000 +0530
***************
*** 1381,1385 ****
  		int __user *optlen);
  int __sys_setsockopt(int fd, int level, int optname, char __user *optval,
  		int optlen);
- asmlinkage long sys_hello(void);
  #endif
--- 1381,1384 ----
*** /home/rohaan/linux-5.15.10/hello/hello.c	2022-02-10 12:52:57.233265020 +0530
--- linux-5.15.10/hello/hello.c	1970-01-01 05:30:00.000000000 +0530
***************
*** 1,9 ****
- #include <linux/kernel.h>
- #include <linux/syscalls.h>
- 
- SYSCALL_DEFINE0(hello)
- 
- {
-     printk("Hello, from inside Linux kernel\n");// ignore colouring here
-     return 0;
- }
--- 0 ----
